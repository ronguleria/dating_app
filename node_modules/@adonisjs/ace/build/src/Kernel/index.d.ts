import { IocContract } from '@adonisjs/fold';
import { Manifest } from '../Manifest';
import { CommandFlag, ManifestNode, CommandContract, RunHookCallback, FindHookCallback, GlobalFlagHandler, CommandConstructorContract } from '../Contracts';
export declare class Kernel {
    commands: {
        [name: string]: CommandConstructorContract;
    };
    manifestCommands?: ManifestNode;
    flags: {
        [name: string]: CommandFlag & {
            handler: GlobalFlagHandler;
        };
    };
    private _manifest?;
    private _hooks;
    private _container;
    private _executeGlobalFlagsHandlers;
    before(action: 'run', callback: RunHookCallback): this;
    before(action: 'find', callback: FindHookCallback): this;
    after(action: 'run', callback: RunHookCallback): this;
    after(action: 'find', callback: FindHookCallback): this;
    register(commands: CommandConstructorContract[]): this;
    getSuggestions(name: string, distance?: number): string[];
    flag(name: string, handler: GlobalFlagHandler, options: Partial<Exclude<CommandFlag, 'name' | 'propertyName'>>): this;
    find(argv: string[]): Promise<CommandConstructorContract | null>;
    runCommand(argv: string[], commandInstance: CommandContract): Promise<any>;
    handle(argv: string[]): Promise<any>;
    useManifest(manifest: Manifest): this;
    useContainer(container: IocContract): this;
    printHelp(command?: CommandConstructorContract): void;
}
