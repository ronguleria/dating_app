"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const colors_1 = require("@poppinss/colors");
const fancy_logs_1 = __importDefault(require("@poppinss/fancy-logs"));
const InvalidFlagType_1 = require("../Exceptions/InvalidFlagType");
const MissingCommandArgument_1 = require("../Exceptions/MissingCommandArgument");
const colors = new colors_1.Colors();
function printAdditionalHelp(command) {
    if (!command) {
        return;
    }
    const commandHelp = colors.yellow(`adonis ${command.commandName} --help`);
    const message = `Consult the command help by typing ${commandHelp}`;
    console.log(`            ${message}`);
}
function handleError(error) {
    if (error instanceof MissingCommandArgument_1.MissingCommandArgument) {
        const { command, argumentName } = error;
        fancy_logs_1.default.error(`Missing argument {${argumentName}}`);
        printAdditionalHelp(command);
        return;
    }
    if (error instanceof InvalidFlagType_1.InvalidFlagType) {
        const { command, argumentName, exceptedType } = error;
        const message = `Expected {${argumentName}} to be a valid {${exceptedType}}`;
        fancy_logs_1.default.error(message);
        printAdditionalHelp(command);
        return;
    }
    fancy_logs_1.default.fatal(error);
}
exports.handleError = handleError;
